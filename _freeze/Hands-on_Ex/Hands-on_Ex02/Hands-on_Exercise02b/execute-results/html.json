{
  "hash": "7509437d32782a1a176660789f89401f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 2b\"\nauthor: \"Stefanie Felicia\"\ndate: \"September 4, 2025\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n## Getting Started\n\nObjective of this exercise is discover aspatial point processes of childcare centers in Singapore by using 2nd order spatial point patterns analysis, which unlike 1st order that only observe the distributions of points in the surface, the 2nd order examine spatial relationships between points in a pattern (**how one point can influence the location of another point**). In this exercise, we will be using spatstat library to answer the following questions:\n\n-   Are the childcare centrers in in Singapore randomly distributed throughout the country ?\n\n-   If not, where are the location with higher concentration of childcare centers ?\n\n## Import Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spatstat, tmap, tidyverse)\n```\n:::\n\n\nThe libraries used in this exercise would be:\n\n-   sf: simple features in R to encode and analyze spatial vector data\n\n-   spatstat: spatial statistics with focus on analyzing spatial point patterns in SD (with some 3D support)\n\n-   tmap: used to draw thematic map\n\n-   tidyverse: collection of R packages that for data manipulation and visualization\n\n## The Data\n\nIn this hands-on exercise, we'll be using the following datasets:\n\n-   <a href=\"https://data.gov.sg/collections/1749/view\">Master Plan 2019 Subzone Boundary (No Sea)</a>\n\n-   <a href=\"https://data.gov.sg/datasets/d_5d668e3f544335f8028f546827b773b4/view\">Child Care Sevices</a>\n\n### Import and Wrangle Geospatial Data\n\nSince we had saved our cleaned dataset from Master Plan 2019 Subzone Boundary (No Sea) in the Hands-on 2a, we'll just load the file here instead of importing and wrangling the dataset again.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_cl <- readRDS(\"data/mpsz_cl.rds\")\n```\n:::\n\n\nNext, we'll extract the childcare centre dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchildcare_sf <- st_read(\"data/ChildCareServices.kml\") %>% \n  st_zm(drop = TRUE, what = \"ZM\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `CHILDCARE' from data source \n  `C:\\stefanie-fel\\ISSS626-GAA\\Hands-on_Ex\\Hands-on_Ex02\\data\\ChildCareServices.kml' \n  using driver `KML'\nSimple feature collection with 1925 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nWe will wrangle the dataframe as Hands-on 2a did.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchildcare_ppp <- as.ppp(childcare_sf)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(childcare_ppp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"ppp\"\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# extract punggol, tampines, choa chu kang and jurong west\npg <- mpsz_cl %>%\n  filter(PLN_AREA_N == \"PUNGGOL\")\ntm <- mpsz_cl %>%\n  filter(PLN_AREA_N == \"TAMPINES\")\nck <- mpsz_cl %>%\n  filter(PLN_AREA_N == \"CHOA CHU KANG\")\njw <- mpsz_cl %>%\n  filter(PLN_AREA_N == \"JURONG WEST\")\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create owin objects\npg_owin = as.owin(pg)\ntm_owin = as.owin(tm)\nck_owin = as.owin(ck)\njw_owin = as.owin(jw)\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#combine with point object \nchildcare_pg_ppp = childcare_ppp[pg_owin]\nchildcare_tm_ppp = childcare_ppp[tm_owin]\nchildcare_ck_ppp = childcare_ppp[ck_owin]\nchildcare_jw_ppp = childcare_ppp[jw_owin]\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#rescale form meters to km\nchildcare_pg_ppp.km = rescale.ppp(childcare_pg_ppp, 1000, \"km\")\nchildcare_tm_ppp.km = rescale.ppp(childcare_tm_ppp, 1000, \"km\")\nchildcare_ck_ppp.km = rescale.ppp(childcare_ck_ppp, 1000, \"km\")\nchildcare_jw_ppp.km = rescale.ppp(childcare_jw_ppp, 1000, \"km\")\n```\n:::\n\n\n## 2nd Order Spatial Point Patterns Analysis\n\n### Analyze Spatial Point Using G-Function\n\nThe G function measures the distribution of the distances from an arbitrary event to its nearest event. In this section, we'll compute G-section estimation using `Gest()` from spatstats library and how to perform monte carlo simulation using `envelope()` of sptatstat library.\n\n#### Choa Chu Kang Planning Area\n\nFirst, we'll compute G-function estimation with Gest()\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nG_CK = Gest(childcare_ck_ppp, correction = \"border\")\nplot(G_CK, xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Exercise02b_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nAnd then perform complete spatial randomness test to confirm the spatial pattern. We'll do so using hypothesis test with the following H0 and H1:\n\n-   H0: the distribution services at Choa Chu Kang are not randomly distributed\n\n-   H1: the distribution services at Choa Chu Kang are randomly distributed\n\nThe p-value needs to be smaller than alpha value 0.001 for H0 to be rejected.\n\nNext, We'll test using Monte Carlo test with G-function\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_CK.csr <- envelope(childcare_ck_ppp, Gest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(G_CK.csr)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Exercise02b_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nHow can we interpret the result:\n\n-   If G-function increase rapidly at short distance, it means the events are **clustered in a point pattern**\n\n-   If G-function increase slowly up to a distance where most events spaced and then increase rapidly, it means the events are **even in a point pattern**\n\n-   The significance of the G-function is based on the Monte Carlo simulation, of the clustered pattern is above the envelopes, then it is a clustered pattern. If it's below the envelopes, hen it is a regular pattern, while if it's within the envelopes, it's homogenous sitribution (or CSR)\n\n#### Tampines Planning Area\n\nFirst, we'll compute the G-function estimation using `best` for correction argument.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_tm = Gest(childcare_tm_ppp, correction = \"best\")\nplot(G_tm)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Exercise02b_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nThe same alpha value (0.001) and hypothesis testing will be done where:\n\n-   H0: the distribution services at Tampines are not randomly distributed\n\n-   H1: the distribution services at Tampines are randomly distributed\n\nWe'll use Monte Carlo simulation to confirm our findings\n\n\n::: {.cell}\n\n```{.r .cell-code}\nG_tm.csr <- envelope(childcare_tm_ppp, Gest, correction = \"all\", nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(G_tm.csr)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Exercise02b_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n### Analyze Spatial Point Using F-Function\n\nThe F-function measures empty space function F(r) or its hazard rate (h(r) form a point pattern in a window of arbitrary shape. In this section, we'll compute F-section estimation using `Fest()` from spatstats library and how to perform monte carlo simulation using `envelope()` of sptatstat library.\n\n#### Choa Chu Kang Planning Area\n\nFirst, we'll compute F-function estimation with Fest()\n\n\n::: {.cell}\n\n```{.r .cell-code}\nF_CK = Fest(childcare_ck_ppp)\nplot(F_CK)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Exercise02b_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nAnd then perform complete spatial randomness test to confirm the spatial pattern. We'll do so using hypothesis test with the following H0 and H1:\n\n-   H0: the distribution services at Choa Chu Kang are not randomly distributed\n\n-   H1: the distribution services at Choa Chu Kang are randomly distributed\n\nThe p-value needs to be smaller than alpha value 0.001 for H0 to be rejected.\n\nNext, We'll test using Monte Carlo test with F-function\n\n\n::: {.cell}\n\n```{.r .cell-code}\nF_CK.csr <- envelope(childcare_ck_ppp, Fest, nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(F_CK.csr)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Exercise02b_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\nHow to interpret F-function results:\n\n-   If F(r) rise slowly at first but more rapidly at longer distances, then it is clustered pattern point\n\n-   If F(r) rise rapidly and then slowly at longer distance, it signifies evenness in pattern point.\n\n-   Similar to G-function, the significance test F-function will confirm if it;s a clustered pattern if the line is below the envelopes. If it;s above the envelopes, then it;s a regular pattern, while if the line falls within the envelopes, it's CSR.\n\n#### Tampines Planning Area\n\nFirst, we'll compute the F-function estimation using `best` for correction argument.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nF_tm = Fest(childcare_tm_ppp, correction = \"best\")\nplot(F_tm)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Exercise02b_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\nThe same alpha value (0.001) and hypothesis testing will be done where:\n\n-   H0: the distribution services at Tampines are not randomly distributed\n\n-   H1: the distribution services at Tampines are randomly distributed\n\nWe'll use Monte Carlo simulation to confirm our findings\n\n\n::: {.cell}\n\n```{.r .cell-code}\nF_tm.csr <- envelope(childcare_tm_ppp, Fest, correction = \"all\", nsim = 999)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 999 simulations of CSR  ...\n1, 2, 3, ......10.........20.........30.........40.........50.........60..\n.......70.........80.........90.........100.........110.........120.........130\n.........140.........150.........160.........170.........180.........190........\n.200.........210.........220.........230.........240.........250.........260......\n...270.........280.........290.........300.........310.........320.........330....\n.....340.........350.........360.........370.........380.........390.........400..\n.......410.........420.........430.........440.........450.........460.........470\n.........480.........490.........500.........510.........520.........530........\n.540.........550.........560.........570.........580.........590.........600......\n...610.........620.........630.........640.........650.........660.........670....\n.....680.........690.........700.........710.........720.........730.........740..\n.......750.........760.........770.........780.........790.........800.........810\n.........820.........830.........840.........850.........860.........870........\n.880.........890.........900.........910.........920.........930.........940......\n...950.........960.........970.........980.........990........\n999.\n\nDone.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(F_tm.csr)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Exercise02b_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n### Analyze Spatial Point Using K-Function\n\nThe K-function examine the number of events found up to a given distance of any particular event. In this section, we'll compute G-section estimation using `Kest()` from spatstats library and how to perform monte carlo simulation using `envelope()` of sptatstat library.\n\n#### Choa Chu Kang Planning Area\n\nFirst, we'll compute K-function estimation with Kest()\n\n\n::: {.cell}\n\n```{.r .cell-code}\nK_ck = Kest(childcare_ck_ppp, correction = \"Ripley\")\nplot(K_ck, . -r ~ r, ylab= \"K(d)-r\", xlab = \"d(m)\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Exercise02b_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\nAnd then perform complete spatial randomness test to confirm the spatial pattern. We'll do so using hypothesis test with the following H0 and H1:\n\n-   H0: the distribution services at Choa Chu Kang are not randomly distributed\n\n-   H1: the distribution services at Choa Chu Kang are randomly distributed\n\nThe p-value needs to be smaller than alpha value 0.001 for H0 to be rejected.\n\nNext, We'll test using Monte Carlo test with K-function\n\n\n::: {.cell}\n\n```{.r .cell-code}\nK_ck.csr <- envelope(childcare_ck_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(K_ck.csr, . - r ~ r, xlab=\"d\", ylab=\"K(d)-r\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Exercise02b_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\nHow to interpret K-function results:\n\n-   If K(h) \\< 𝜋ℎ\\^2, then point pattern is regular\n\n-   If K(h) \\> 𝜋ℎ\\^2, then point pattern is clustered\n\n-   Significant test are the same as G-function and F-function\n\n#### Tampines Planning Area\n\nFirst, we'll compute the K-function estimation using `Ripley` for correction argument.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nK_tm = Kest(childcare_tm_ppp, correction = \"Ripley\")\nplot(K_tm, . -r ~ r, \n     ylab= \"K(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Exercise02b_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\nThe same alpha value (0.001) and hypothesis testing will be done where:\n\n-   H0: the distribution services at Tampines are not randomly distributed\n\n-   H1: the distribution services at Tampines are randomly distributed\n\nWe'll use Monte Carlo simulation to confirm our findings\n\n\n::: {.cell}\n\n```{.r .cell-code}\nK_tm.csr <- envelope(childcare_tm_ppp, Kest, nsim = 99, rank = 1, glocal=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(K_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"K(d)-r\", xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Exercise02b_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n### Analyze Spatial Point Using L-Function\n\nIn practice, the K-function will be normalized to obatin a benchmark of zero. So in this section, we'll compute L-section estimation using `Lest()` from spatstats library and how to perform monte carlo simulation using `envelope()` of sptatstat library.\n\n#### Choa Chu Kang Planning Area\n\nFirst, we'll compute L-function estimation with Lest()\n\n\n::: {.cell}\n\n```{.r .cell-code}\nL_ck = Lest(childcare_ck_ppp, correction = \"Ripley\")\nplot(L_ck, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Exercise02b_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\nAnd then perform complete spatial randomness test to confirm the spatial pattern. We'll do so using hypothesis test with the following H0 and H1:\n\n-   H0: the distribution services at Choa Chu Kang are not randomly distributed\n\n-   H1: the distribution services at Choa Chu Kang are randomly distributed\n\nThe p-value needs to be smaller than alpha value 0.001 for H0 to be rejected.\n\nNext, We'll test using Monte Carlo test with L-function\n\n\n::: {.cell}\n\n```{.r .cell-code}\nL_ck.csr <- envelope(childcare_ck_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n```\n\n\n:::\n:::\n\n\nHow to interpret L-function results:\n\n-   L(r)\\>0 means that the observed distribution is geographically concentrated.\n\n-   L(r)\\<0 means dispersion.\n\n-   L(r)=0 signifies complete spatial randomness (CRS).\n\n#### Tampines Planning Area\n\nFirst, we'll compute the L-function estimation using `Ripley` for correction argument.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nL_tm = Lest(childcare_tm_ppp, correction = \"Ripley\")\nplot(L_tm, . -r ~ r, \n     ylab= \"L(d)-r\", xlab = \"d(m)\", \n     xlim=c(0,1000))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Exercise02b_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\nThe same alpha value (0.001) and hypothesis testing will be done where:\n\n-   H0: the distribution services at Tampines are not randomly distributed\n\n-   H1: the distribution services at Tampines are randomly distributed\n\nWe'll use Monte Carlo simulation to confirm our findings\n\n\n::: {.cell}\n\n```{.r .cell-code}\nL_tm.csr <- envelope(childcare_tm_ppp, Lest, nsim = 99, rank = 1, glocal=TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGenerating 99 simulations of CSR  ...\n1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,\n21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\n41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\n61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,\n81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, \n99.\n\nDone.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(L_tm.csr, . - r ~ r, \n     xlab=\"d\", ylab=\"L(d)-r\", xlim=c(0,500))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Exercise02b_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n",
    "supporting": [
      "Hands-on_Exercise02b_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}